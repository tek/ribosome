name: ribosome
version: 0.3.0.1
synopsis: api extensions for nvim-hs
description: Please see the README on GitHub at <https://github.com/tek/ribosome-hs>
github: "tek/ribosome-hs"
license: OtherLicense
license-file: LICENSE
author: "Torsten Schmits"
maintainer: "tek@tryp.io"
copyright: "2019 Torsten Schmits"
category: Neovim
build-type: Simple

dependencies:
  - HTF
  - aeson
  - ansi-terminal
  - name: base
    version: '>= 4 && < 5'
    mixin:
      hiding (Prelude)
  - bytestring
  - cereal
  - cereal-conduit
  - chiasma
  - composition
  - composition-extra
  - conduit
  - conduit-extra
  - containers
  - cornea
  - data-default
  - deepseq
  - directory
  - either
  - exceptions
  - filepath
  - free
  - fuzzy
  - hourglass
  - hslogger
  - lens
  - lifted-async
  - lifted-base
  - messagepack
  - monad-control
  - monad-loops
  - mtl
  - nvim-hs
  - path
  - path-io
  - pretty-terminal
  - prettyprinter
  - prettyprinter-ansi-terminal
  - process
  - relude
  - resourcet
  - safe
  - split
  - stm
  - stm-chans
  - stm-conduit
  - template-haskell
  - text
  - th-abstraction
  - time
  - transformers
  - transformers-base
  - typed-process
  - unix
  - unliftio
  - unliftio-core
  - utf8-string

library:
  source-dirs: lib
  other-modules:
    - Prelude

default-extensions:
  - BangPatterns
  - BinaryLiterals
  - BlockArguments
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveDataTypeable
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DerivingStrategies
  - DoAndIfThenElse
  - EmptyDataDecls
  - ExistentialQuantification
  - ExtendedDefaultRules
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - InstanceSigs
  - KindSignatures
  - LambdaCase
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - OverloadedStrings
  - PartialTypeSignatures
  - PatternGuards
  - PolyKinds
  - RankNTypes
  - RecordWildCards
  - ScopedTypeVariables
  - StandaloneDeriving
  - TemplateHaskell
  - TupleSections
  - TypeApplications
  - TypeFamilies
  - TypeOperators
  - TypeSynonymInstances
  - UnicodeSyntax
  - ViewPatterns
